//! SeaORM Entity. Generated by sea-orm-codegen 0.2.6

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "ingredient")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub name: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::recipe_ingredient::Entity")]
    RecipeIngredient,
    #[sea_orm(has_many = "super::ingredient_tag::Entity")]
    IngredientTag,
}

impl Related<super::recipe_ingredient::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::RecipeIngredient.def()
    }
}

impl Related<super::ingredient_tag::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::IngredientTag.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
